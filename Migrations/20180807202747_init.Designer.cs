// <auto-generated />
using System;
using Dictionaries.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dictionaries.Migrations
{
    [DbContext(typeof(DictionaryContext))]
    [Migration("20180807202747_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dictionaries.Models.AnotherClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AnotherClassSet");
                });

            modelBuilder.Entity("Dictionaries.Models.BasicClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BasicClassSet");
                });

            modelBuilder.Entity("Dictionaries.Models.ClassWithDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnotherDependencyId");

                    b.Property<int?>("DependencyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AnotherDependencyId");

                    b.HasIndex("DependencyId");

                    b.ToTable("ClassWithDependencySet");
                });

            modelBuilder.Entity("Dictionaries.Models.ClassWithDependency", b =>
                {
                    b.HasOne("Dictionaries.Models.AnotherClass", "AnotherDependency")
                        .WithMany()
                        .HasForeignKey("AnotherDependencyId");

                    b.HasOne("Dictionaries.Models.BasicClass", "Dependency")
                        .WithMany()
                        .HasForeignKey("DependencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
